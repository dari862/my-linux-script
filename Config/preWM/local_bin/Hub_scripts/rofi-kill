#!/usr/bin/env bash
#
# Script name: dm-kill
# Description: Search for a process to kill.
# Dependencies: rofi
# GitLab: https://www.gitlab.com/dwt1/dmscripts
# License: https://www.gitlab.com/dwt1/dmscripts/LICENSE
# Contributors: Derek Taylor, HostGrady

# Set with the flags "-e", "-u","-o pipefail" cause the script to fail
# if certain things happen, which is a good thing.  Otherwise, we can
# get hidden bugs that are hard to discover.

set -euo pipefail
opt="${1-Default_NOW__}"
opt2="${2-Default_NOW__}"

source "$HOME/.local/bin/config/config.ini"

main() {
    # Running ps to get running processes and display in rofi.
    # In this script we use a variable called ${rofi_command}, in your scripts, you
    # should just write dmenu or rofi or whatever launcher you use.
    selected="$(ps --user "$USER" -F | \
                ${rofi_command} -p "Search for process to kill:" "$@" | \
                awk '{print $2" "$11}')";

    # Nested 'if' statements.  The outer 'if' statement is what to do
    # when we select one of the 'selected' options listed in rofi.
    if [[ -n $selected ]]; then
        # Piping No/Yes into rofi as a safety measure, in case you
        answer="$(echo -e "No\nYes" | ${rofi_command} -p "Kill $selected?" "$@")"

        if [[ $answer == "Yes" ]]; then
            # This echo command prints everything before the first space.
	    # Luke Smith has a video on why this is most efficient in this case
	    # An alternative way to do it would be with awk or cut, both are less 
            # efficient however.         
            kill -9 "${selected%% *}"
            notify-send "${selected}" "Process $selected has been killed."
            echo "Process $selected has been killed." && exit 0
        else
	    # We want this script to exit with a 1 and not 0 because 1 means
	    # an error, so this can be handled by other scripts better
            echo "Program terminated." && exit 1
        fi
    fi
}

if [ "$opt" != "Default_NOW__" ]
then
	[ "$opt2" == "Default_NOW__" ] && opt2="Process $opt has been killed."
	killall -9 $opt && notify-send "$opt" "$opt2"
else
	[[ "${BASH_SOURCE[0]}" == "${0}" ]] && main "$@"
fi
