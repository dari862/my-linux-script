#!/usr/bin/env bash
set -euo pipefail
# change keyboard layout
# works on any init system
# requirements: dmenu, xorg-setxkbmap

source "$HOME/.local/bin/config/config.ini"

opt__="${1-h}"
opt2__="${2-h}"

###################################################
###################################################
###################################################

kb_layout_stuff(){
	if ! command -v setxkbmap >/dev/null; then
		exit 1
	fi
	
kb_layou_HELP_List=(
"1 add_kb_layout"
"2 change_kb_layout"
"3 notify-send"
"4 echo kb_layout")

	if [ -z "$(grep us $HOME/.local/bin/config/kb_layout.ini 2>/dev/null|| :)" ]; then
		mkdir -p $HOME/.local/bin/config
		echo "us" > $HOME/.local/bin/config/kb_layout.ini
	fi
	
	add_kb_layout()
	{
		kb_choice="$(awk '/! layout/{flag=1; next} /! variant/{flag=0} flag {print $2, "- " $1}' /usr/share/X11/xkb/rules/base.lst | ${rofi_command} -p "" )"
		kb="$(echo "$kb_choice" | awk '{print $3}')"
		
		if [ ! -z "$kb" ] && [ "$(grep $kb $HOME/.local/bin/config/kb_layout.ini)" != "$kb" ]
		then
			echo "$kb" >> $HOME/.local/bin/config/kb_layout.ini
		fi
		
		kb_layout_help
	}
	
	change_kb_layout()
	{
		current_kb="$(setxkbmap -query | grep -oP 'layout:\s*\K\w+')"
		next_kb="$(awk "/$current_kb/{p=1}p" $HOME/.local/bin/config/kb_layout.ini | sed -n 2p)"
		[ -z "$next_kb" ] && next_kb="us"
		setxkbmap "$next_kb"
	}
		
	kb_layout_help()
	{
		Chosen_OPT=""
		Chosen_OPT="$(printf '%s\n' "${kb_layou_HELP_List[@]}" | ${rofi_command} -p '')"
		opt2__="$(echo $Chosen_OPT | awk '{ print $1 }')"
		kb_layout_main
	}
	
	kb_layout_main()
	{
	case $opt2__ in
		1) add_kb_layout ;;
		2) change_kb_layout ;;
		3) notify-send "âŒ¨  Keyboard/language module" "$(printf "%s" "\- Current layout: $kb")";;
		4) echo "$kb" ;;
		*) kb_layout_help ;;
	esac
	}
	kb_layout_main
}

###################################################
###################################################
###################################################

change_timezone() {
  TIMEZONE="UTC"
  res=""

  res="$(timedatectl list-timezones | \
         ${rofi_command} -p "Select time zone ('ESC' to Exit):")"
  clear
  
	if [ -z "${res}" ]; then
			exit 0
	fi
	
  if [ -n "${res}" ]; then
    TIMEZONE="${res}"
    echo "Using ${TIMEZONE@Q} as time zone."
    sudo timedatectl set-timezone ${TIMEZONE@Q}
  else
    echo "Using default time zone ${TIMEZONE@Q}."
  fi
}

###################################################
###################################################
###################################################

change_locale() {
  local LOCALE="en_US.UTF-8"
  local CHARSET="UTF-8"
  local res
  
  res="$(sed -n "s,^#\?\ \?\([[:alnum:]\.@_\-]\+\)\ \([[:alnum:]\-]\+\)\ *$,\1 \2,p" /etc/locale.gen | \
         ${rofi_command} -p "Select locale ('ESC' to Exit):")"
  clear

	if [ -z "${res}" ]; then
		exit 0
	fi

  if [ -n "${res}" ]; then
    LOCALE="$(echo "${res}" | cut -d" " -f1)"
    CHARSET="$(echo "${res}" | cut -d" " -f2)"
    sed -i "/^#\ \?${LOCALE} ${CHARSET}/s/^#\ \?//" /etc/locale.gen
    locale-gen
    echo "LANG=${LOCALE}" > /etc/locale.conf
    echo "KEYMAP=${LOCALE}" > /etc/vconsole.conf
  else
    echo "Using default locale ${LOCALE@Q}."
    echo "Using default charset ${CHARSET@Q}."
  fi
}

###################################################
###################################################
###################################################

HELP_List=(
"k kb_layout_stuff"
"l change_locale"
"t change_timezone"
"e edit script"
)

help()
	{
		Chosen_OPT=""
		Chosen_OPT="$(printf '%s\n' "${HELP_List[@]}" | ${rofi_command} -p '')"
		opt__="$(echo $Chosen_OPT | awk '{ print $1 }')"
		main
	}
	
main()
{
case $opt__ in
	k) kb_layout_stuff ;;
	l) change_locale ;;
	t) change_timezone ;;
	e) "$TERMINAL" -e "$EDITOR" "$0" ;;
	*) help ;;
esac
}

main
